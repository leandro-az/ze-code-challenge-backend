version: '3.8'

services:

  redisserver:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - server-network  

  mongoserver:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: mongoUser
      MONGO_INITDB_ROOT_PASSWORD: ZeDeliveryMongo2021
    ports:
      - "27017:27017"
    volumes:
      - ./data/MongoDB:/data/db 
    command: mongod --quiet --logpath /dev/null 
    networks:
      - server-network

  server:
    build: .
    ports:
      - "3000:3000" 
      - "80:80"
    depends_on:
      - mongoserver
      - redisserver
    environment: 
      REDIS_HOST: redisserver
      REDIS_PORT: 6379
      MONGO_HOST: mongoserver
      MONGO_PORT: 27017
      MONGO_DATABASE: admin
      MONGO_USERNAME: mongoUser
      MONGO_PASSWORD: ZeDeliveryMongo2021
      APP_PORT: 3000
      BRANCH: PRD
    command: npm run start  
    networks:
      - server-network     

  redisserverTest:
    image: redis
    ports:
      - "6380:6380"
    networks:
      - test-network

  mongoserverTest:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_USERNAME: mongoUserTeste
      MONGO_INITDB_ROOT_PASSWORD: ZeDeliveryMongo2021Teste
    ports:
      - "27018:27018"
    command: mongod --port 27018 --quiet --logpath /dev/null 
    networks:
      - test-network

  test:
    build: .
    depends_on:
      - redisserverTest
      - mongoserverTest
    environment: 
      REDIS_HOST: redisserverTest
      REDIS_PORT: 6380
      MONGO_HOST: mongoserverTest
      MONGO_PORT: 27018
      MONGO_DATABASE: admin
      MONGO_USERNAME: mongoUserTeste
      MONGO_PASSWORD: ZeDeliveryMongo2021Teste
      APP_PORT: 3000
      BRANCH: TST
    command: npm run test  
    networks:
      - test-network 
    # volumes:
    #   - ./data/logs:/usr/app/logs    


networks: 
  server-network:
    driver: bridge
  test-network:
    driver: bridge  